JOTS is a Java library that allows creation of a SNMP interface from Java Objects.

1. Getting started:

1.1 Creating an SNMP tree is done by using one of the following methods:

public static SnmpTree createSnmpTree(int[] prefix, Object obj)
public static SnmpTree createSnmpTree(String mibName, String rootName, 
	int[] prefix, Object obj, OutputStream mibOutputStream)

1.2 Code example

public class SomeObject {
	int fieldOne;
	String fieldTwo;
	final SomeObjectType fieldThree;
	
	...
}

SomeObject obj = new SomeObject();
SnmpTree tree = SnmpTreeConstructor.createSnmpTree(new int[] { 1 }, obj);

1.2.1 Snmp Agent

// At this point, you have an SnmpTree object that lets you do gets and sets.
// The next step is getting an SNMP agent working. JOTS has an implementation
// using SNMP4J. Creating your own using a different SNMP library should not
// be too difficult.

InetSocketAddress agentAddress = new InetSocketAddress("0.0.0.0", 8161);
SnmpAgent agent = new SnmpAgent(tree, agentAddress, SnmpAgent.Protocol.udp);

1.2.2 Snmp Trap Receiver

// Creating a trap receiver is done in a similar way:

InetSocketAddress agentAddress = new InetSocketAddress("0.0.0.0", 8162);
SnmpTrapReceiver receiver = new SnmpTrapReceiver(tree, agentAddress, SnmpAgent.Protocol.udp) {
  @Override
  protected void processTrap(CommandResponderEvent request)
  {
    for (VariableBinding vb : request.getPDU().getVariableBindings())
      tree.set(vb.getOid(), vb.getVariable().toString(), true);
  }
}

1.3 Tables

SNMP tables map to Java collections (Maps and Lists). Currently, there is no
way to track changes to the collections, so changes will not be tracked
after tree creation. To enforce this, only subclasses of ImmutableMap and
ImmutableList are allowed. If you know what you are doing, you can modify
SnmpTreeConstructor to allow other maps, but beware that the tree will hold
onto objects without any other reference and newly added items will not be
tracked.

As a limited workaround, SnmpAgent does support replacing the SnmpTree. This
can be done using the public void updateTree(SnmpTree tree) method. Note
that this may cause odd behavior for in-flight partial requests, such as
from an snmp walk. All currently requests currently processing must complete
before the change takes place.
